#include "scr_manager.h"
#include "oled_gui.h"

#include "os_msg.h"
#include "main.h"
#include "game.h"
#include "gui_port.h"

static const uint8_t imgTitle[264] = { // 88x24
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 
      0xfc, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x00, 
      0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x07, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
      0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x03, 0x03, 
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x03, 0x03, 0x10, 0x31, 0x06, 0x08, 0x70, 
      0x0e, 0x19, 0x80, 0x00, 0x03, 0x06, 0x38, 0x73, 0x9f, 0x1c, 0xf8, 0x3f, 0x3f, 0xc0, 0x00, 0x03, 
      0x7c, 0x38, 0x73, 0xbf, 0x9d, 0xfc, 0x7f, 0xbf, 0xc0, 0x00, 0x03, 0x78, 0x18, 0x61, 0xf3, 0x8f, 
      0x9c, 0x63, 0x8c, 0x00, 0x00, 0x03, 0x70, 0x18, 0x61, 0xe3, 0x0f, 0x18, 0xe3, 0x0c, 0x00, 0x00, 
      0x03, 0x30, 0x10, 0xe1, 0xc3, 0x0e, 0x18, 0xfe, 0x0c, 0x00, 0x00, 0x03, 0x38, 0x30, 0xe1, 0xc3, 
      0x0e, 0x18, 0xe0, 0x0c, 0x00, 0x00, 0x03, 0x1e, 0x39, 0xe1, 0x83, 0x0c, 0x18, 0xe1, 0x0c, 0x00, 
      0x00, 0x07, 0x8f, 0xbf, 0x79, 0x83, 0x8c, 0x1c, 0xff, 0x0c, 0x00, 0x00, 0x03, 0x87, 0x9e, 0x39, 
      0x83, 0x8c, 0x1c, 0x7e, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const uint8_t imgGuy[] = { // 50x50
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc, 
      0x00, 0x3f, 0x00, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x7f, 0x80, 0x00, 0x03, 0xff, 0xff, 0x80, 0xff, 
      0xc0, 0x00, 0x03, 0xff, 0xff, 0xc0, 0xff, 0xc0, 0x00, 0x01, 0xff, 0xff, 0xf0, 0xff, 0xc0, 0x00, 
      0x00, 0x00, 0x0f, 0xf8, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x07, 0xfc, 0xff, 0xc0, 0x00, 0x00, 0x00, 
      0x03, 0xfc, 0x7f, 0x80, 0xff, 0xff, 0xf8, 0x07, 0xfe, 0x3f, 0x00, 0xff, 0xff, 0xf8, 0x1f, 0xfe, 
      0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 
      0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x03, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 
      0x07, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xf1, 0x80, 0x00, 0x00, 0x00, 0x0f, 0xff, 
      0xc3, 0x80, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x0f, 0xff, 0x80, 0xff, 0xff, 0x0f, 0xfe, 0x1f, 0xff, 
      0x80, 0xff, 0xff, 0x0f, 0xf8, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x07, 0xf8, 0x0f, 0xff, 0x00, 0x00, 
      0x00, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf1, 
      0xfc, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 
      0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 
      0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x01, 
      0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 
      0xf0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x00, 
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
      0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 
      0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 
      0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 
      0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00
};





static void setup_function(msg_t * msg)
{
      bmp1.init(30, 40, 88, 24);
      bmp1.setBmp(imgTitle);

      bmp2.init(0, 0, 50, 50);
      bmp2.setBmp(imgGuy);


      lb1.init(60, 3);
      lb2.init(60, 18);
      lb3.init(60, 33);

      lb1.print("New game");
      lb2.print("Chart");
      lb3.print("Setting");

      gr1.init();
      gr2.init();
      gr1.addObj(&bmp2, false);
      gr1.setX(-47);
      bmp1.setX(128);

      gr2.addObj(&lb1, true);
      gr2.addObj(&lb2, true);
      gr2.addObj(&lb3, true);
      gr2.setFade(4);

      an1.init(&bmp1, -98, 0, 300);
      gr1.move(47, 0, 300, ANIM_NULL_CB); 
      gr2.fading(FADE_IN, 300, ANIM_NULL_CB); 
      os_task_delay(350);

}
static void loop_funtion(msg_t * msg)
{

	
}

static void event_function(msg_t * msg)
{
      uint8_t index;
      switch (msg->sig)
      {
      case AC_DISPLAY_BUTTON_MODE_PRESSED:
            scr_curr_set_stt(SCR_STT_READY); //Set back to ready state to make loop_func stop
            index = gr2.getFocusIndex();
            an1.init(&bmp1, 98, 0, 300);
            gr1.move(-47, 0, 300, ANIM_NULL_CB); 
            gr2.setFade(0);
            gr2.fading(FADE_OUT, 300, ANIM_NULL_CB); 
            os_task_delay(400);
            gr2.setFade(0);
            gr1.deinit();
            gr2.deinit();
            bmp1.deinit();
            bmp2.deinit();
            lb1.deinit();
            lb2.deinit();
            lb3.deinit();            
            if(index == 0) scr_shift(SCR_MAIN_GAME);
            else if(index == 1) scr_shift(SCR_CHART_GAME);
            else if(index == 2) scr_shift(SCR_SETTING_GAME);
            else scr_shift(SCR_START_UP);
            break;
      case AC_DISPLAY_BUTTON_UP_PRESSED:
            gr2.focusObj(FOCUS_PREV);
		os_task_delay(200);
            break;  
      case AC_DISPLAY_BUTTON_DOWN_PRESSED:
            gr2.focusObj(FOCUS_NEXT);
		os_task_delay(200);
            break;     
      default:
            break;
      }
}


void scr_menu_game_register( void )
{
    scr_reg(SCR_MENU_GAME, nullptr, nullptr, setup_function, loop_funtion, event_function);
}